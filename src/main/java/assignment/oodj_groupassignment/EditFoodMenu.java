/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment.oodj_groupassignment;

import javax.swing.*;
import java.io.*;
import java.util.*;

/**
 *
 * @author wongj
 */
public class EditFoodMenu extends javax.swing.JFrame {

    /**
     * Creates new form AddFood
     */
    public EditFoodMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        foodID = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JToggleButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        storage = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        foodMenuList = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        foodName = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        addFood = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        orderButton = new javax.swing.JButton();
        rateFeedback = new javax.swing.JButton();
        cuisine = new javax.swing.JComboBox<>();
        category = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(200, 182, 226));

        jPanel8.setBackground(new java.awt.Color(168, 164, 206));

        jLabel7.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 204));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Price :");

        foodID.setBackground(new java.awt.Color(200, 182, 226));
        foodID.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        foodID.setForeground(new java.awt.Color(255, 255, 204));
        foodID.setToolTipText("");

        jPanel16.setBackground(new java.awt.Color(200, 182, 226));

        deleteButton.setBackground(new java.awt.Color(73, 92, 131));
        deleteButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 204));
        deleteButton.setText("Delete Food");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(73, 92, 131));
        editButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 204));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setBackground(new java.awt.Color(200, 182, 226));
        jScrollPane4.setBorder(null);
        jScrollPane4.setForeground(new java.awt.Color(200, 182, 226));
        jScrollPane4.setFocusable(false);

        storage.setEditable(false);
        storage.setBackground(new java.awt.Color(200, 182, 226));
        storage.setColumns(1);
        storage.setForeground(new java.awt.Color(200, 182, 226));
        storage.setRows(1);
        storage.setCaretColor(new java.awt.Color(242, 217, 222));
        storage.setDisabledTextColor(new java.awt.Color(242, 217, 222));
        storage.setFocusable(false);
        storage.setRequestFocusEnabled(false);
        storage.setSelectedTextColor(new java.awt.Color(242, 217, 222));
        storage.setSelectionColor(new java.awt.Color(242, 217, 222));
        jScrollPane4.setViewportView(storage);

        foodMenuList.setBackground(new java.awt.Color(168, 164, 206));
        foodMenuList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        foodMenuList.setForeground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setViewportView(foodMenuList);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 204));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel21.setText("Food ID :");

        jLabel22.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 204));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("Food Name :");

        jLabel23.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 204));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText("Cuisine :");

        jLabel24.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 204));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("Food Category :");

        foodName.setBackground(new java.awt.Color(200, 182, 226));
        foodName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        foodName.setForeground(new java.awt.Color(255, 255, 204));

        price.setBackground(new java.awt.Color(200, 182, 226));
        price.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        price.setForeground(new java.awt.Color(255, 255, 204));
        price.setText("0");

        searchButton.setBackground(new java.awt.Color(73, 92, 131));
        searchButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 204));
        searchButton.setText("Search");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(73, 92, 131));
        clearButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 204));
        clearButton.setText("Clear");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        addFood.setBackground(new java.awt.Color(73, 92, 131));
        addFood.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        addFood.setForeground(new java.awt.Color(255, 255, 204));
        addFood.setText("Add");
        addFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(122, 134, 182));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Manage MENU");
        jLabel1.setToolTipText("");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        logout.setBackground(new java.awt.Color(255, 255, 51));
        logout.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 0, 0));
        logout.setText("Log Out");
        logout.setAlignmentY(0.0F);
        logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout.setIconTextGap(0);
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        menuButton.setBackground(new java.awt.Color(73, 92, 131));
        menuButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        menuButton.setForeground(new java.awt.Color(255, 255, 204));
        menuButton.setText("Manage Menu");
        menuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuButtonMouseClicked(evt);
            }
        });

        orderButton.setBackground(new java.awt.Color(73, 92, 131));
        orderButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        orderButton.setForeground(new java.awt.Color(255, 255, 204));
        orderButton.setText("Manage Order");
        orderButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderButtonMouseClicked(evt);
            }
        });

        rateFeedback.setBackground(new java.awt.Color(73, 92, 131));
        rateFeedback.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rateFeedback.setForeground(new java.awt.Color(255, 255, 204));
        rateFeedback.setText("Rating & Feedback");
        rateFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rateFeedbackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(170, 170, 170)
                .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(rateFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rateFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))))
        );

        cuisine.setBackground(new java.awt.Color(200, 182, 226));
        cuisine.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        cuisine.setForeground(new java.awt.Color(255, 255, 204));
        cuisine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Malay", "Chinese", "Indian", "Western", " " }));
        cuisine.setSelectedIndex(4);
        cuisine.setToolTipText("");

        category.setBackground(new java.awt.Color(200, 182, 226));
        category.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        category.setForeground(new java.awt.Color(255, 255, 204));
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rice", "Noodles", "Bread", "Meat", "Vegetables", "Drinks", "" }));
        category.setSelectedIndex(6);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(addFood, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(foodID, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(foodName, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(cuisine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(price, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(50, 50, 50)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(foodID, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(foodName))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(cuisine))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(category))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addFood, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67))
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rateFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rateFeedbackMouseClicked
        // this button calls the RateFeedback form
        RateFeedback feedback = new RateFeedback();
        feedback.setVisible(true);
        this.setVisible(false);
        feedback.setTitle("APU Cafeteria Ordering System");
        feedback.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        feedback.setResizable(false);
    }//GEN-LAST:event_rateFeedbackMouseClicked

    private void orderButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderButtonMouseClicked
        // this button calls the AllOrder form
        AllOrders order = new AllOrders();
        order.setVisible(true);
        this.setVisible(false);
        order.setTitle("APU Cafeteria Ordering System");
        order.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        order.setResizable(false);
    }//GEN-LAST:event_orderButtonMouseClicked

    private void menuButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menuButtonMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // this button calls the ManagerLogin form
        ManagerLogin ALog = new ManagerLogin();
        ALog.setVisible(true);
        this.setVisible(false);
        ALog.setTitle("APU Cafeteria Ordering System");
        ALog.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ALog.setResizable(false);
    }//GEN-LAST:event_logoutMouseClicked

    private void addFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodActionPerformed
        // this button executes method from AllFoodClass and provide required input for the method
        int a = 0;
        if (addFood.getModel().isSelected())
        {
            foodID.setText(""); foodName.setText(""); price.setText("0");
            String[] clearList = new String[0];
            foodMenuList.setListData(clearList);
            foodID.setEditable(false);
            foodName.setEditable(true);
            cuisine.setEditable(true);
            category.setEditable(true);
            searchButton.setEnabled(false);
            editButton.setEnabled(false);
            deleteButton.setEnabled(false);
            JOptionPane.showMessageDialog(this, "You are in add food mode.");
            cuisine.setSelectedIndex(0);
            category.setSelectedIndex(0);
        }
        else
        {
            // trim method call to remove leading and trailing blank spaces
            String fName = foodName.getText().trim().replaceAll(" ", "_");
            String fCuisine = cuisine.getSelectedItem().toString();
            String fCategory = category.getSelectedItem().toString();
            try {
                if (fCuisine.length() < 3 || fCategory.length() < 3 || fName.length() < 3) {
                    FileNotFoundException test = new FileNotFoundException();
                    throw test;
                }
                String temp = price.getText().trim();
                double fPrice = Double.parseDouble(temp);
                String[] foodDetails = {fName, fCuisine, fCategory};
                AllFoodClass editData = new AllFoodClass(foodDetails);
                editData.readFood();
                editData.addFood(foodDetails, fPrice);
                editData.writeFoodFile();
                foodID.setEditable(true);
                searchButton.setEnabled(true);
                editButton.setEnabled(true);
                deleteButton.setEnabled(true);
            // catches exception for illegal food price input
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,
                        "Price can only be numbers smaller than 1000 and with up to two decimal point!");
                e.printStackTrace();
            // catches exception for illegal selection
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(this,
                        "You must select cuisine and food category!");
                e.printStackTrace();
                addFood.getModel().setSelected(false);
            }
            cuisine.setSelectedIndex(4);
            category.setSelectedIndex(6);
        }
    }//GEN-LAST:event_addFoodActionPerformed

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        // removes any displayed data on the screen
        String[] clearList = new String[0];
        foodMenuList.setListData(clearList);
        foodID.setText("");
        foodName.setText("");
        cuisine.setSelectedIndex(4);
        category.setSelectedIndex(6);
        price.setText("0");
        addFood.setEnabled(true);
        editButton.setEnabled(true);
        editButton.getModel().setSelected(false);
        addFood.getModel().setSelected(false);
        searchButton.setEnabled(true);
        deleteButton.setEnabled(true);
        searchButton.setEnabled(true);
        storage.setText("");
    }//GEN-LAST:event_clearButtonMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // this button calls and executes checkFood method from AllFoodClass
        String fID = foodID.getText();
        String fName = foodName.getText().trim().replaceAll(" ", "_");
        String fCuisine = cuisine.getSelectedItem().toString();
        String fCategory = category.getSelectedItem().toString();
        double fPrice = 0;
        try
        {
            String temp = price.getText();
            fPrice = Double.parseDouble(temp);
            String[] input = {fID, fName, fCuisine, fCategory, temp};
            String[] search = {fID, fName, fCuisine, fCategory};
            AllFoodClass food = new AllFoodClass(input);
            food.readFood();

            List<Integer> index = food.checkFood(search, fPrice);
            storage.setVisible(false);
            jScrollPane4.setVisible(false);
            storage.setText("");
            for(Integer integer: index)
                storage.append(String.valueOf(integer) + " ");
            if (index.get(index.size() - 1) == 0)
            JOptionPane.showMessageDialog(this,"No matching record found.");
            else
            {
                String temp1 = "";
                List<String> output = new ArrayList<String>();
                for (int i = 0; i < (index.size() - 1); i++)
                {
                    temp1 = AllFoodClass.data.get(index.get(i));
                    output.add(temp1);
                }
                String[] menuPrint = output.toArray(new String[0]);
                foodMenuList.setListData(menuPrint);
            }
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this,
                "Price can only be numbers smaller than 1000 and with up to two decimal point!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchButtonMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // this button calls method from ALlFoodClass to edit food record
        int a = 0;
        if (editButton.getModel().isSelected() && foodMenuList.getSelectedValue() != null)
        {
            foodID.setText(""); foodName.setText(""); price.setText("0");

            String[] editFoodArr = foodMenuList.getSelectedValue().split(" ");
            // get selected index from the list
            a = foodMenuList.getSelectedIndex();
            //disabling certain field to prevent user from editing it
            foodID.setText(editFoodArr[0]);
            foodID.setEditable(false);
            foodName.setText(editFoodArr[1]);
            foodName.setEditable(false);
            cuisine.setSelectedItem(editFoodArr[2]);
            cuisine.setEditable(false);
            category.setSelectedItem(editFoodArr[3]);
            category.setEditable(false);
            price.setText(editFoodArr[4]);
            searchButton.setEnabled(false);
            addFood.setEnabled(false);
            deleteButton.setEnabled(false);
        }
        else if (!editButton.getModel().isSelected() && foodMenuList.getSelectedValue() != null)
        {
            a = foodMenuList.getSelectedIndex();
            System.out.println(a);
            String fID = foodID.getText().trim();
            String fName = foodName.getText().trim().replaceAll(" ", "_");
            String fCuisine = cuisine.getSelectedItem().toString();
            String fCategory = category.getSelectedItem().toString();
            try {
                String temp = price.getText().trim();
                double fPrice = Double.parseDouble(temp);
                String[] edited = {fID, fName, fCuisine, fCategory, temp};
                String[] index = storage.getText().split(" ");
                int[] intIndex = new int[index.length];
                for (int i = 0; i < index.length; i++) {
                    intIndex[i] = Integer.parseInt(index[i]);
                }
                AllFoodClass editData = new AllFoodClass(edited);
                editData.readFood();
                editData.editFood(edited, intIndex[a]);
                editData.writeFoodFile();
                JOptionPane.showMessageDialog(this, "Selected food has been edited.");
            }
            catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this,
                    "Price can only be numbers smaller than 1000 and with up to two decimal point!");
                e.printStackTrace();
            }
            foodID.setEditable(true);
            foodName.setEditable(true);
            cuisine.setEditable(true);
            category.setEditable(true);
            searchButton.setEnabled(true);
            addFood.setEnabled(true);
            deleteButton.setEnabled(true);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // this button calls method to delete food record from the selection
        int deleteFood = foodMenuList.getSelectedIndex();
        String[] index = storage.getText().split(" ");
        int[] intIndex = new int[index.length];
        for (int i = 0; i < index.length; i++) {
            intIndex[i] = Integer.parseInt(index[i]);
        }
        String[] test = {""};
        AllFoodClass deleteData = new AllFoodClass(test);
        deleteData.readFood();
        deleteData.removeFood(intIndex[deleteFood]);
        deleteData.writeFoodFile();
        JOptionPane.showMessageDialog(this, "Selected food has been deleted.");
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // this button calls the Menu form
        Menu menu = new Menu();
        this.setVisible(false);
        menu.setVisible(true);
        menu.setTitle("APU Cafeteria Ordering System");
        menu.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        menu.setResizable(false);
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditFoodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditFoodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditFoodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditFoodMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditFoodMenu foodMenu = new EditFoodMenu();
                foodMenu.setTitle("APU Cafeteria Ordering System");
                foodMenu.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                foodMenu.setResizable(false);
                foodMenu.setSize(1280,720);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addFood;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> cuisine;
    private javax.swing.JButton deleteButton;
    private javax.swing.JToggleButton editButton;
    private javax.swing.JTextField foodID;
    private javax.swing.JList<String> foodMenuList;
    private javax.swing.JTextField foodName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logout;
    private javax.swing.JButton menuButton;
    private javax.swing.JButton orderButton;
    private javax.swing.JTextField price;
    private javax.swing.JButton rateFeedback;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextArea storage;
    // End of variables declaration//GEN-END:variables
}
